[{"/app/src/utils/history.js":"1","/app/src/App.js":"2","/app/src/components/Routes/PrivateRoute.js":"3","/app/src/components/Navbar/Navbar.js":"4","/app/src/pages/Shopping/Shopping.js":"5","/app/src/pages/profile/profile.js":"6","/app/src/pages/Authentication/Login.js":"7","/app/src/utils/Endpoints.js":"8","/app/src/components/Cards/cards.js":"9","/app/src/components/footer/footer.js":"10","/app/src/components/ImageUploader/ImagrUploader.js":"11","/app/src/actions/profile.js":"12","/app/src/actions/covid.js":"13","/app/src/components/Cards/ProductsBox.js":"14","/app/src/pages/MainPage/MainPage.js":"15","/app/src/utils/urls.js":"16","/app/src/actions/stuff.js":"17","/app/src/components/Users/commentBox.js":"18","/app/src/components/Bar/Bar.js":"19","/app/src/index.js":"20","/app/src/pages/Authentication/Register.js":"21","/app/src/components/MainLogo/MainLogo.js":"22","/app/src/actions/auth.js":"23","/app/src/components/Users/users.js":"24","/app/src/components/charts/chart.js":"25","/app/src/components/error_manager/error_displayer.js":"26","/app/src/components/Buttons/Buttons.js":"27","/app/src/components/Navbar/NavbarItems.js":"28","/app/src/utils/axiosApi.js":"29"},{"size":94,"mtime":1612783852874,"results":"30","hashOfConfig":"31"},{"size":1136,"mtime":1614352833373,"results":"32","hashOfConfig":"31"},{"size":340,"mtime":1614509724021,"results":"33","hashOfConfig":"34"},{"size":2155,"mtime":1614509711842,"results":"35","hashOfConfig":"34"},{"size":560,"mtime":1614343615461,"results":"36","hashOfConfig":"34"},{"size":536,"mtime":1614343440803,"results":"37","hashOfConfig":"34"},{"size":2573,"mtime":1614342006546,"results":"38","hashOfConfig":"31"},{"size":1557,"mtime":1614504461758,"results":"39","hashOfConfig":"34"},{"size":1694,"mtime":1614505641442,"results":"40","hashOfConfig":"34"},{"size":2211,"mtime":1614509683219,"results":"41","hashOfConfig":"34"},{"size":863,"mtime":1614511386751,"results":"42","hashOfConfig":"31"},{"size":1148,"mtime":1614373681965,"results":"43","hashOfConfig":"31"},{"size":181,"mtime":1614509489923,"results":"44","hashOfConfig":"31"},{"size":8614,"mtime":1614373725978,"results":"45","hashOfConfig":"31"},{"size":719,"mtime":1614343147850,"results":"46","hashOfConfig":"31"},{"size":143,"mtime":1613648770491,"results":"47","hashOfConfig":"31"},{"size":1747,"mtime":1614507141476,"results":"48","hashOfConfig":"31"},{"size":2610,"mtime":1614509732190,"results":"49","hashOfConfig":"31"},{"size":4983,"mtime":1614511149398,"results":"50","hashOfConfig":"31"},{"size":220,"mtime":1609590824351,"results":"51","hashOfConfig":"34"},{"size":6515,"mtime":1614507853508,"results":"52","hashOfConfig":"31"},{"size":1375,"mtime":1614509694831,"results":"53","hashOfConfig":"34"},{"size":1727,"mtime":1614450781910,"results":"54","hashOfConfig":"34"},{"size":1981,"mtime":1614509736365,"results":"55","hashOfConfig":"34"},{"size":3757,"mtime":1614509667298,"results":"56","hashOfConfig":"31"},{"size":2044,"mtime":1614509673504,"results":"57","hashOfConfig":"34"},{"size":1315,"mtime":1612816607733,"results":"58","hashOfConfig":"34"},{"size":472,"mtime":1614511475545,"results":"59","hashOfConfig":"34"},{"size":1095,"mtime":1614160792112,"results":"60","hashOfConfig":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1dh0vsa",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"wz73hg",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/utils/history.js",[],["127","128"],"/app/src/App.js",[],"/app/src/components/Routes/PrivateRoute.js",[],["129","130"],"/app/src/components/Navbar/Navbar.js",[],"/app/src/pages/Shopping/Shopping.js",[],"/app/src/pages/profile/profile.js",["131"],"/app/src/pages/Authentication/Login.js",["132","133"],"import React, { Component } from 'react';\nimport './auth_style.css';\nimport { Link } from 'react-router-dom';\nimport {login} from '../../actions/auth';\nimport {urls} from '../../utils/urls';\nimport {base_paths} from '../../utils/Endpoints'; \nimport Error_displayer from '../../components/error_manager/error_displayer';\n\nclass Login extends Component {\n\n    \n    constructor(props){\n        super(props)\n        this.state={\n            username: \"\",\n            password: \"\",\n        };\n        this.error_manager = React.createRef();\n    }\n\n\n    changeValue = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    sign_in = () => {\n        login(this.state.username, this.state.password, \n            this.error_manager.current.update_error\n        )\n    }\n   \n    render(){    \n        return (\n            <div className=\"outbox\">\n                <img src={base_paths.MAIN_VIDEO} />\n            <div className=\"box\">\n                <div className=\"columns\">\n                    <div className=\"rows\">\n                        <label className=\"items\">\n                            username\n                            <input\n                                name=\"username\"\n                                type=\"text\"\n                                value={this.state.username}\n                                onChange={this.changeValue}\n                            />\n                        </label>\n                        <label className=\"items\">\n                            password  \n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.changeValue}\n                            />\n                        </label>\n                        <div className='items'>\n                            <p>{this.state.error}</p>\n                        </div>\n                    </div>\n                    <div className=\"rows\">\n                        <div className='items'>\n                            <button onClick={this.sign_in}>login</button>\n                        </div>\n                        <div className='items'>\n                            <Link to={urls.REGISTER}><button>Sign up</button></Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Error_displayer ref={this.error_manager} />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","/app/src/utils/Endpoints.js",[],"/app/src/components/Cards/cards.js",[],"/app/src/components/footer/footer.js",[],"/app/src/components/ImageUploader/ImagrUploader.js",[],"/app/src/actions/profile.js",[],"/app/src/actions/covid.js",[],"/app/src/components/Cards/ProductsBox.js",["134"],"import React, { Component } from 'react';\nimport Button from '../Buttons/Buttons';\nimport {assignProducts, setProducts, listAssignedProducts, listUnassignedProducts,\n                deleteProducts, deleteAnnouncement} from '../../actions/stuff';\nimport './ProductsBox.css';\nimport Error_displayer from '../../components/error_manager/error_displayer';\n\nclass ProductsBox extends Component {\n   \n    constructor(props){\n        super(props)\n        this.state={\n            assigned_products : [],\n            unassigned_products : [],\n            name : \"\",\n            description : \"\",\n            priority : \"\",\n        }\n        this.error_manager = React.createRef();\n    }\n\n    deleteAnnouncement = () => {\n        deleteAnnouncement(this.props.announcement_id)\n            .then(response => {\n                this.props.exit()\n            }).catch(error => {\n                this.error_manager.current.update_error(error.request.response)\n            })\n    }\n    \n\n    update_assigned_products = (response) => {\n        this.setState({assigned_products : response})\n    }\n\n    update_unassigned_products = (response) => {\n        this.setState({unassigned_products : response})\n    }\n\n    listAssigned = () => {\n        listAssignedProducts(this.props.announcement_id)\n        .then((response) => {\n            this.update_assigned_products(response.data)\n        }).catch((error) => {\n            this.error_manager.current.update_error(error.request.response)\n        })\n    }\n\n    listUnassigned = () => {\n        listUnassignedProducts(this.props.announcement_id)\n        .then((response) => {\n            this.update_unassigned_products(response.data)\n        }).catch((error) => {\n            this.error_manager.current.update_error(error.request.response)\n        })\n    }\n\n    componentDidMount(){\n        this.listAssigned()\n        this.listUnassigned()\n    }\n\n    \n\n    add_product = () => {\n        setProducts(this.props.announcement_id,\n                    this.state.name,\n                    this.state.description,\n                    this.state.priority)\n        .then((response) => {\n            this.listAssigned()\n            this.listUnassigned()\n        }).catch((error)=> {\n            this.error_manager.current.update_error(error.request.response)\n        })\n    }\n    \n    \n    changeValue = (event) =>{\n        this.setState({\n            ...this.state,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    deleteProduct = (key1, key2) => {\n        deleteProducts(key1, key2)\n        .then(response => {\n            this.listUnassigned()\n            this.listAssigned()\n        }).catch(error => {\n            this.error_manager.current.update_error(error.request.response)\n        })\n    }    \n\n    assign = (key1, key2) => {\n        assignProducts(key1, key2)\n        .then(response => {\n            this.listUnassigned()\n            this.listAssigned()\n        }).catch(error => {\n            console.log(error.message)\n            this.error_manager.current.update_error(error.request.response)\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"Box\">\n                <div className=\"innerBox\">\n                    <div className='options'>\n                        <div className=\"inputs\">\n                            <input \n                                name=\"name\"\n                                type=\"text\"\n                                value={this.state.new_product}\n                                placeholder=\"name of product\"\n                                onChange={this.changeValue} />\n                            <input \n                                name=\"description\"\n                                type=\"text\"\n                                value={this.state.description}\n                                placeholder=\"description\"\n                                onChange={this.changeValue} />\n                            <input \n                                placeholder=\"priority\"\n                                name=\"priority\"\n                                type=\"number\" \n                                min=\"1\" \n                                max=\"10\" \n                                value={this.state.priority}\n                                onChange={this.changeValue} />\n                        </div>\n                        <div className='act_btn'>\n                            <Button \n                                buttonStyle='outline'\n                                ButtonsSize='medium'\n                                onClick={this.add_product}\n                                >add\n                            </Button>\n                            <Button \n                                onClick={this.deleteAnnouncement}\n                                buttonStyle='outline'\n                                ButtonsSize='medium'\n                                >delete\n                            </Button>\n                            <Button \n                                buttonStyle='outline'\n                                ButtonsSize='medium'\n                                onClick={this.props.exit}\n                                    >X\n                            </Button>\n                        </div>\n                    </div>\n                    <div className='rows'>\n                    <div className='unassigned'>\n                    {this.state.unassigned_products.map((item) =>{\n                        return (\n                            <li key={item.pk}>\n                                <div  className='item' >\n                                    <div className=\"main_inf\">\n                                        <h2>{item.name}</h2>\n                                        <div className=\"main_btn\">\n                                            <Button \n                                                buttonStyle='outline'\n                                                ButtonsSize='medium'\n                                                onClick={(event)=> this.deleteProduct(this.props.announcement_id,\n                                                                item.pk)}\n                                                >-\n                                            </Button>\n                                            <Button  \n                                                buttonStyle='outline'\n                                                ButtonsSize='medium'\n                                                onClick={(event) => this.assign(\n                                                                this.props.announcement_id, item.pk)} \n                                                >assign\n                                            </Button>\n                                        </div>\n                                        <p>{item.priority}</p>\n                                        <p>{item.date}</p>\n                                    </div>\n                                    <p>{item.description}</p>\n                                </div>\n                            </li>\n                        )\n                    })}\n                    </div>\n                    <div className='assigned'>\n                    {this.state.assigned_products.map((item, index) =>{\n                        return (\n                            <li key={index}>\n                                <div  className='item' >\n                                    <div className=\"main_inf\">\n                                        <h2>{item.name}</h2>\n                                        <Button \n                                            buttonStyle='outline'\n                                            ButtonsSize='medium'\n                                            onClick={(event)=> this.deleteProduct(this.props.announcement_id,\n                                                                item.pk)}\n                                            >-\n                                        </Button>\n                                        <p>{item.priority}</p>\n                                        <p>{item.date}</p>\n                                        <p>{item.username}</p>\n                                    </div>\n                                    <p>{item.description}</p>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </div>\n                </div>\n                </div>\n                <Error_displayer ref={this.error_manager} />\n            </div>\n       )\n    }\n}\n\nexport default ProductsBox;\n","/app/src/pages/MainPage/MainPage.js",["135"],"import React, { Component } from 'react';\nimport Navbar from \"../../components/Navbar/Navbar.js\";\nimport './MainPage.css';\nimport MainLogo from \"../../components/MainLogo/MainLogo.js\";\nimport {logout} from '../../actions/auth';\nimport Charts from '../../components/charts/chart';\nimport Footer from '../../components/footer/footer';\nimport {base_paths} from '../../utils/Endpoints'; \n\nclass MainPage extends Component {\n    \n    render(){    \n        return (\n            <div>\n                <img src={base_paths.MAIN_VIDEO} />\n                <Navbar logout={logout} />\n                <MainLogo />\n                <Charts />\n                <Footer />\n            </div>\n        );\n    }\n}\nexport default MainPage;\n","/app/src/utils/urls.js",[],"/app/src/actions/stuff.js",[],"/app/src/components/Users/commentBox.js",["136"],"import React, { Component } from 'react';\nimport {setComments, listComments} from '../../actions/profile';\nimport Button from '../Buttons/Buttons';\nimport Error_displayer from '../../components/error_manager/error_displayer';\nimport './commentBox.css';\n\nclass CommentBox extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            comments : [],\n            text: '',\n        }\n        this.error_manager = React.createRef();\n\n    }    \n\n\n    updateComments = () => {\n        listComments(this.props.target_id)\n        .then(response => {\n            console.log(response.data)\n           this.setState({comments: response.data}) \n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n\n    componentDidMount(){\n        this.updateComments()\n    }\n\n\n    changeValue = (event) =>{\n        this.setState({\n            ...this.state,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    createComments = () => {\n        setComments(this.state.text, this.props.target_id)\n        .then(response => {\n           this.updateComments() \n        })\n    }\n\n    render() {\n        return (\n            <div className=\"comment-box\">\n                <img src={this.props.image} alt=\"pic.png\" />\n                <div className=\"options-box\">\n                    <textarea\n                        type=\"text\"\n                        name=\"text\"\n                        placeholder=\"comment\"\n                        value={this.state.text}\n                        onChange={this.changeValue}\n                    /> \n                    <div className='act_btn'>\n                        <Button \n                            buttonStyle='outline'\n                            ButtonsSize='medium'\n                            onClick={this.createComments}\n                            >add\n                        </Button>\n                    </div>\n                </div>\n            {this.state.comments.map((item) => {\n                return (\n                    <li key={item.pk}>\n                        <div className='profile'>\n                            <img src={item.source_info.image} alt={item.source_info.username+\".png\"} />\n                            <p>{item.source_info.username}</p>\n                        </div>\n                        <div className='comment'>\n                           <p>{item.text}</p> \n                        </div>\n                    </li>\n                )\n            })}\n            <Error_displayer ref={this.error_manager} />\n            </div>\n        )\n    }\n}\n\nexport default CommentBox\n\n","/app/src/components/Bar/Bar.js",["137"],"import React, { Component } from 'react';\nimport Button from '../Buttons/Buttons';\nimport './Bar.css';\nimport '../Buttons/Buttons.css';\nimport * as FaIcons from \"react-icons/fa\";\nimport * as BiIcons from \"react-icons/bi\";\nimport Error_displayer from '../../components/error_manager/error_displayer';\n\nconst SearchBar = (Results, submit_func, search_func, search_my, title_creator, descritpion_title) =>{\n    class Head extends Component {\n    \n        constructor(){\n            super()\n            this.state={\n                key : \"\",\n                description : \"\",\n                title : \"\",\n                isActiveCreator: false,\n                bar_char : '+',\n                result : []\n            }\n            this.error_manager = React.createRef();\n        }\n   \n        changeValue = (event) =>{\n            this.setState({\n                ...this.state,\n                [event.target.name] : event.target.value\n            });\n        }\n\n        update_result = (response) => {\n            this.setState({result : response})\n        }\n\n        submit = () => {\n            submit_func(this.state.description, this.state.title)\n            .then(response => {\n                this.search()\n            }).catch(error => {\n                this.error_manager.current.update_error(error.request.response)\n            })\n        }\n\n        activateCreator = () => {\n            if(this.state.isActiveCreator){\n                this.setState({\n                    isActiveCreator : false,\n                    bar_char : '+'\n                })\n            }else{\n                this.setState({\n                    isActiveCreator : true,\n                    bar_char : '-'\n                })\n            }\n        }\n    \n\n        search = () => {\n            search_func(this.state.key)\n            .then(response => {\n                this.update_result(response.data)\n            })\n        }\n    \n        componentDidMount(){\n            this.search()\n        }\n\n        \n        search_my_announcements= () => {\n            search_my()\n            .then(response=>{\n                this.update_result(response.data)\n            })\n        }\n\n\n        render_loupe = () => {\n            if (search_func){\n                return (\n                    <div className=\"circle\" onClick={this.search}>\n                        <p><FaIcons.FaSearch /></p>\n                    </div>\n                )\n            }\n        }\n\n        render_submit = () => {\n            if (submit_func){\n                return(\n                    <div className=\"circle\" onClick={this.activateCreator}>\n                        <p>{this.state.bar_char}</p>\n                    </div>\n                )\n            }\n        }\n\n\n        render_mysubmit = () => {\n            if (search_my){\n                return(\n                    <div className=\"circle\" onClick={this.search_my_announcements}>\n                        <p><BiIcons.BiUserCircle /></p>\n                    </div>\n                )\n            }\n        }\n\n        render() {\n            return (\n                <>\n                <div className='container'>\n                    <div className='bar'>\n                        <div className=\"search-bar\">\n                            <input\n                                name=\"key\"\n                                type=\"text\"\n                                value = {this.state.key}\n                                placeholder=\"search\" \n                                onChange={this.changeValue} />\n                        </div>\n                        {this.render_loupe()}\n                        {this.render_submit()}\n                        {this.render_mysubmit()}\n                    </div>\n                </div>\n                <div className=\"pos\">\n                    <div className={(this.state.isActiveCreator && submit_func) ? \"creator creator-display\" : \"creator creator-hide\"} >\n                        <input\n                            name=\"title\"\n                            type=\"text\"\n                            value={this.state.title}\n                            placeholder={title_creator}\n                            onChange={this.changeValue} />\n                        <textarea\n                            type=\"text\"\n                            name=\"description\"\n                            value={this.state.description}\n                            placeholder={descritpion_title}\n                            onChange={this.changeValue} />\n                        <Button buttonSize='medium'    \n                            buttonStyle='outline' \n                            onClick={this.submit}>\n                                submit\n                        </Button>\n                    </div>\n                </div>\n                <Results result={this.state.result} />\n                <Error_displayer ref={this.error_manager} />\n                </>    \n            )\n        }\n    }\n\n    return Head;\n}\n\nexport default SearchBar;\n","/app/src/index.js",[],"/app/src/pages/Authentication/Register.js",["138","139"],"import React, {Component} from 'react';\nimport './auth_style.css';\nimport {register} from '../../actions/auth';\nimport {base_paths} from '../../utils/Endpoints'; \nimport Error_displayer from '../../components/error_manager/error_displayer';\nimport ImageUploader from '../../components/ImageUploader/ImagrUploader';\n\nclass Register extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = ({\n            username: \"\",\n            image: null,\n            email: \"\",\n            country: \"\",\n            town: \"\",\n            telephone: \"\",\n            password: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            birth: \"\",\n            description: \"\",\n            progress: 0\n        })\n        this.error_manager = React.createRef();\n    }\n\n    changeValue = (event) => {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        });\n    }\n   \n    update_image = (image) => {\n        this.setState({\n            image : image\n        })\n    }\n    \n    handleSubmit = () => {\n        register(\n            this.state.username,\n            this.state.image,\n            this.state.email,\n            this.state.country,\n            this.state.town,\n            this.state.telephone,\n            this.state.birth,\n            this.state.description,\n            this.state.password,\n            this.state.firstname,\n            this.state.lastname,\n            this.error_manager.current.update_error\n        )\n    }\n\n\n   \n    render(){\n        return (\n            <div className=\"outbox\">\n                <img src={base_paths.MAIN_VIDEO} />\n                <div className='box'>\n                    <div className='columns'>\n                        <div className='rows'> \n                            <label className='items'>\n                            username* \n                                <input \n                                    type=\"text\" \n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.changeValue}\n                                /> \n                            </label> \n                            <label className='items'>\n                                first name \n                                <input \n                                    type=\"text\" \n                                    name=\"firstname\"\n                                    value={this.state.firstname}\n                                    onChange={this.changeValue}\n                                /> \n                            </label> \n                            <label className='items'>\n                                country*  \n                                <input \n                                    type=\"text\" \n                                    name=\"country\"\n                                    value={this.state.country}\n                                    onChange={this.changeValue}\n                                /> \n                            </label> \n                            <label className='items'>\n                                telephone*   \n                                <input \n                                    type=\"tel\" \n                                    name=\"telephone\"\n                                    value={this.state.telephone}\n                                    onChange={this.changeValue}\n                                /> \n                            </label> \n                        </div>\n                        <div className='rows'>\n                            <label className='items'>\n                                email*  \n                                <input \n                                    type=\"email\" \n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.changeValue}\n                                /> \n                            </label>\n                            <label className='items'>\n                                last name\n                                <input \n                                    type=\"text\" \n                                    name=\"lastname\" \n                                    value={this.state.lastname}\n                                    onChange={this.changeValue}\n                                /> \n                            </label>\n                            <label className='items'>\n                                town*  \n                                <input \n                                    type=\"text\" \n                                    name=\"town\" \n                                    value={this.state.town}\n                                    onChange={this.changeValue}\n                                /> \n                            </label>\n                            <label className='items'>\n                                password*\n                                <input \n                                    type=\"password\" \n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.changeValue}\n                                /> \n                            </label>\n                        </div>\n                    </div>\n                    <label className='items'>\n                        description    \n                        <textarea\n                           type=\"text\"\n                           name=\"description\"\n                           value={this.state.description}\n                           onChange={this.changeValue}\n                       /> \n                   </label>\n                   <label className='items'>\n                       date of birth     \n                       <input \n                           type=\"date\" \n                           name=\"birth\"\n                           value={this.state.birth}\n                           onChange={this.changeValue}\n                       /> \n                   </label>\n                   <ImageUploader update_image={this.update_image} />\n                   <div className='items'>\n                       <button onClick={this.handleSubmit}>register</button>\n                   </div>\n                </div>\n                <Error_displayer ref={this.error_manager} />\n            </div>\n        );\n    }\n}\n\nexport default Register;\n","/app/src/components/MainLogo/MainLogo.js",["140"],"/app/src/actions/auth.js",[],"/app/src/components/Users/users.js",[],"/app/src/components/charts/chart.js",[],"/app/src/components/error_manager/error_displayer.js",[],"/app/src/components/Buttons/Buttons.js",[],"/app/src/components/Navbar/NavbarItems.js",[],"/app/src/utils/axiosApi.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":13,"column":17,"nodeType":"149","endLine":13,"endColumn":52},{"ruleId":"147","severity":1,"message":"148","line":37,"column":17,"nodeType":"149","endLine":37,"endColumn":52},{"ruleId":"150","severity":1,"message":"151","line":73,"column":13,"nodeType":"149","endLine":73,"endColumn":57},{"ruleId":"150","severity":1,"message":"151","line":215,"column":17,"nodeType":"149","endLine":215,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":15,"column":17,"nodeType":"149","endLine":15,"endColumn":52},{"ruleId":"150","severity":1,"message":"151","line":85,"column":13,"nodeType":"149","endLine":85,"endColumn":57},{"ruleId":"150","severity":1,"message":"151","line":151,"column":17,"nodeType":"149","endLine":151,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":64,"column":17,"nodeType":"149","endLine":64,"endColumn":52},{"ruleId":"150","severity":1,"message":"151","line":167,"column":17,"nodeType":"149","endLine":167,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":42,"column":17,"nodeType":"149","endLine":42,"endColumn":61},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Error_displayer must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]